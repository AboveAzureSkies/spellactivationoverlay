<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
..\FrameXML\UI.xsd">
  <Script file="InterfaceOptionsPanels.lua"/>

  <Frame name="SpellActivationOverlayOptionsPanel" hidden="true" parent="InterfaceOptionsFramePanelContainer">
    <Layers>
      <Layer level="ARTWORK">
        <FontString name="$parentTitle" text="DISPLAY_LABEL" inherits="GameFontNormalLarge" justifyH="LEFT" justifyV="TOP">
          <Anchors>
            <Anchor point="TOPLEFT">
              <Offset>
                <AbsDimension x="16" y="-16"/>
              </Offset>
            </Anchor>
          </Anchors>
        </FontString>
      </Layer>
    </Layers>
    <Frames>
      <Slider name="$parentSpellAlertOpacitySlider" inherits="OptionsSliderTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentTitle" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="24" y="-32"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <!-- <OnLoad>
            self:OnBackdropLoaded();
            self.Text:SetText("Spell Alert opacity");
          </OnLoad> -->
          <!-- <OnLoad>
            self.type = CONTROLTYPE_SLIDER;
            self.cvar = "spellActivationOverlayOpacity";
            self.SetDisplayValue = self.SetValue;
            _G[self:GetName().."Low"]:SetText(OFF);
            self.SetValue = function (self, value)
print("Slider SetValue", self, value);
              value = math.floor(value * 100 + 0.5) / 100;
              self:SetDisplayValue(value);
              if (value == 0) then
                SpellActivationOverlayDB.alert.enabled = false;
              else
                SpellActivationOverlayDB.alert.enabled = true;
              end
              SpellActivationOverlayFrame:SetAlpha(value);
            end
            self.GetValue = function(self)
print("Checkbox GetValue", self, SpellActivationOverlayDB.alert.opacity);
              return SpellActivationOverlayDB.alert.opacity;
            end
            BlizzardOptionsPanel_RegisterControl(self, self:GetParent());
            self:RegisterEvent("VARIABLES_LOADED");
          </OnLoad>
          <OnValueChanged>
            value = math.floor(value * 100 + 0.5) / 100;
            if (value ~= 0) then
              value = math.max(0.5, value);
            end
            self.value = value;
            self:SetValue(value);
            SpellActivationOverlayDB.alert.opacity = value;
          </OnValueChanged>
          <OnEvent>
            local value = tonumber(SpellActivationOverlayDB.alert.opacity);
            value = math.floor(value * 100 + 0.5) / 100;
            self:SetValue(value);
          </OnEvent> -->
        </Scripts>
      </Slider>
      <CheckButton name="$parentGlowingButtons" inherits="InterfaceOptionsCheckButtonTemplate">
        <Anchors>
          <Anchor point="TOPLEFT" relativeTo="$parentSpellAlertOpacitySlider" relativePoint="BOTTOMLEFT">
            <Offset>
              <AbsDimension x="0" y="-32"/>
            </Offset>
          </Anchor>
        </Anchors>
        <Scripts>
          <!-- <OnLoad>
            self.Text:SetText("Glowing Buttons");
          </OnLoad> -->
        </Scripts>
      </CheckButton>
    </Frames>
    <Scripts>
      <OnLoad function="SpellActivationOverlayOptionsPanel_OnLoad"/>
    </Scripts>
  </Frame>

</Ui>
